//Backup of ORIGINAL step event.

//Keyboard Variables
input_left			= keyboard_check(ord("A"));
input_right			= keyboard_check(ord("D"));
input_up			= keyboard_check(ord("W"));
input_down			= keyboard_check(ord("S"));
input_run			= keyboard_check(vk_lshift);

//Adding More Speed
if (input_run) { spd = rspd; } 
else		   { spd = nspd; }

//Reset Movement Variables (Collision Vars) (The value and speed/location, of the X&Y coordinates.

moveX = 0;
moveY = 0;

//Movement Intention

moveX = (input_right - input_left) * spd;
moveY = (input_down - input_up) * spd;

//Collision Checks (Are you going to collide within "moveX/moveY" distance? Distance = speed variable (2) 
//(So will you collide within 2 pixels? If so, run code, if not then exit.)

//Horizontal Check
if (moveX != 0) {
if (place_meeting(x + moveX, y, obj_wall)) {  
																	
	repeat abs(moveX) {
		if (!place_meeting(x + sign(moveX), y, obj_wall)) { 
			x += sign(moveX)		
			}	else { break; } 
		}
			moveX = 0; 
	}
}

//Vertical Check
if (moveY != 0) {
if (place_meeting(x, y + moveY, obj_wall)) {  
					
	repeat abs(moveY) {
		if (!place_meeting(x, y + sign(moveY), obj_wall)) { 
			y += sign(moveY)			
			}	else { break; } 
		}
		moveY = 0; 
	}
}

//Movement Application (Yes, you can move/apply x and y coords to moveX and moveY, 
//AFTER the ABOVE has been ran.)

x += moveX;
y += moveY;